{
	"info": {
		"_postman_id": "3c4c0838-d50e-4d98-b2c0-5865d0620baa",
		"name": "Trello E2E",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create a board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const boardName = pm.collectionVariables.get('boardName');\r",
							"pm.test(\"Should return correct board name \" + boardName, function () {\r",
							"    pm.expect(json.name).to.eql(boardName)\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('boardId', json.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/?name={{boardName}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "{{boardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create first list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const firstList = pm.collectionVariables.get('firstList');\r",
							"pm.test(\"Should return correct list name \" + firstList, function () {\r",
							"    pm.expect(json.name).to.eql(firstList);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('firstListId', json.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/lists?name={{firstList}}&idBoard={{boardId}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{firstList}}"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create second list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const secondList = pm.collectionVariables.get('secondList');\r",
							"pm.test(\"Should return correct list name \" + secondList, function () {\r",
							"    pm.expect(json.name).to.eql(secondList);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('secondListId', json.id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/lists?name={{secondList}}&idBoard={{boardId}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "{{secondList}}"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create new card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const cardName = pm.collectionVariables.get('cardName');\r",
							"pm.test(\"Should return correct card name \" + cardName, function () {\r",
							"    pm.expect(json.name).to.eql(cardName);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.set('cardId', json.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/cards?idList={{firstListId}}&name={{cardName}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"cards"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{firstListId}}"
						},
						{
							"key": "name",
							"value": "{{cardName}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update card - move card to second list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const secondListId = pm.collectionVariables.get('secondListId');\r",
							"pm.test(\"Should return second list id\", function () {\r",
							"    pm.expect(json.idList).to.eql(secondListId);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}/cards/:id?idList={{secondListId}}&key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"cards",
						":id"
					],
					"query": [
						{
							"key": "idList",
							"value": "{{secondListId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete existing board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/boards/{{boardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"boards",
						"{{boardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "boardName",
			"value": "Scenario E2E",
			"type": "default"
		},
		{
			"key": "firstList",
			"value": "Zadania do zrobienia",
			"type": "default"
		},
		{
			"key": "secondList",
			"value": "Zadania zrobione",
			"type": "default"
		},
		{
			"key": "boardId",
			"value": ""
		},
		{
			"key": "firstListId",
			"value": ""
		},
		{
			"key": "secondListId",
			"value": ""
		},
		{
			"key": "cardName",
			"value": "PrzetestowaÄ‡ scenariusz e2e",
			"type": "default"
		},
		{
			"key": "cardId",
			"value": ""
		}
	]
}